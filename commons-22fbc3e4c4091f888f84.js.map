{"version":3,"file":"commons-22fbc3e4c4091f888f84.js","mappings":"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","sources":["webpack://digifact-website/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://digifact-website/./src/components/header/header.js","webpack://digifact-website/./src/components/footer/footer.js","webpack://digifact-website/./src/components/seo.js","webpack://digifact-website/./src/components/layout.js"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.17\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.17\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.17 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nconst Header = () => {\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const [showMenuCollapse, setShowMenuCollapse] = useState(false);\n  const [showSolutionsCollapse, setShowSolutionsCollapse] = useState(false);\n\n  const toggleMenu = () => {\n    setShowMobileMenu(!showMobileMenu);\n  };\n\n  const toggleMenuCollapse = () => {\n    setShowMenuCollapse(!showMenuCollapse);\n  };\n\n  const toggleSolutionsCollapse = () => {\n    setShowSolutionsCollapse(!showSolutionsCollapse);\n  };\n\n  return (\n    <header className=\"z-20 sticky\">\n      <div className=\"static mx-auto w-11/12\">\n        <nav className=\"flex h-16 items-center justify-between\">\n          <div className=\"flex items-center gap-x-[22px] xl:gap-x-8\">\n            <a\n              aria-current=\"page\"\n              className=\"group transition-colors duration-200\"\n              href=\"./\"\n            >\n              <span className=\"sr-only\">DigiFact Logo</span>\n              <div className=\"logo\">DigiFact</div>\n            </a>\n            <ul className=\"flex [@media(max-width:1182px)]:hidden ml-4\">\n              <li>\n                <a\n                  href=\"#product\"\n                  className=\"flex items-center px-3.5 py-5 text-10 transition-colors duration-200 hover:text-blue xl:px-2.5 text-lg font-normal\"\n                >\n                  <span>Product</span>\n                </a>\n              </li>\n              <li>\n                <button\n                  className=\"flex items-center px-3.5 py-5 text-15 transition-colors duration-200 hover:text-blue xl:px-2.5 text-lg font-normal\"\n                  onClick={toggleSolutionsCollapse}\n                  onMouseOver={() => {\n                    setShowSolutionsCollapse(true);\n                  }}\n                  onFocus={() => {\n                    setShowSolutionsCollapse(true);\n                  }}\n                  onMouseLeave={() => {\n                    setShowSolutionsCollapse(false);\n                  }}\n                >\n                  <span>Solutions</span>\n                  <i className=\"fa-solid fa-chevron-down fa-xs pl-1\"></i>\n                </button>\n                {showSolutionsCollapse && (\n                  <div\n                    className=\"absolute bottom-0 left-1/2 w-full -translate-x-1/2 translate-y-full border-t border-gray-4 bg-white shadow-dropdown\"\n                    onMouseOver={() => {\n                      setShowSolutionsCollapse(true);\n                    }}\n                    onFocus={() => {\n                      setShowSolutionsCollapse(true);\n                    }}\n                    onMouseLeave={() => {\n                      setShowSolutionsCollapse(false);\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                  >\n                    <div className=\"w-8/12 m-auto py-3\">\n                      <ul className=\"flex w-full flex-wrap justify-left gap-x-16 gap-y-10 md:gap-x-10 md:gap-y-7\">\n                        <li>Data Extraction</li>\n                        <li>Data Matching</li>\n                        <li>Document Authenticity Checks</li>\n                        <li>Liveness Detection</li>\n                      </ul>\n                    </div>\n                  </div>\n                )}\n              </li>\n              <li>\n                <a\n                  href=\"#blog\"\n                  className=\"flex items-center px-3.5 py-5 text-10 transition-colors duration-200 hover:text-blue xl:px-2.5 text-lg font-normal\"\n                >\n                  <span>Blog</span>\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"#about\"\n                  className=\"flex items-center px-3.5 py-5 text-10 transition-colors duration-200 hover:text-blue xl:px-2.5 text-lg font-normal\"\n                >\n                  <span>About us</span>\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"#contact\"\n                  className=\"flex items-center px-3.5 py-5 text-10 transition-colors duration-200 hover:text-blue xl:px-2.5 text-lg font-normal\"\n                >\n                  <span>Contact</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center xl:pl-4 md:px-4 xs:flex-col xs:gap-y-4  [@media(max-width:1182px)]:hidden\">\n              <a\n                className=\"group transition-colors duration-200 mr-6 inline-flex items-center justify-center gap-x-2 font-medium hover:text-blue xl:rounded-sm xl:hover:border-blue xs:mr-4 xs:w-full\"\n                href=\"#github\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <i className=\"fa-brands fa-github fa-lg\"></i>\n                <span className=\"hidden\">GitHub</span>\n                <span className=\"sr-only\">GitHub</span>\n              </a>\n              <a\n                className=\"group transition-colors duration-200 inline-flex items-center justify-center font-medium leading-none text-center whitespace-nowrap disabled:bg-gray-3 disabled:text-white disabled:pointer-events-none sm:w-full text-base px-4.5 py-[11px] rounded-sm text-black border border-black mr-4 !px-[17px] !text-15 xs:mr-0 hover:border-blue-600 hover:text-blue-600\"\n                href=\"#sign-in\"\n              >\n                Sign In\n              </a>\n            </div>\n            <button\n              className=\"group relative h-8 w-6 print:!hidden hidden [@media(max-width:1182px)]:block\"\n              type=\"button\"\n              aria-label=\"Open menu\"\n              id=\"toggle-nav\"\n              onClick={toggleMenu}\n            >\n              {showMobileMenu ? (\n                <>\n                  <span className=\"absolute block h-0.5 w-6 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1 top-[15px] rotate-45\"></span>\n                  <span className=\"absolute top-[15px] block h-0.5 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1 invisible w-0 opacity-0\"></span>\n                  <span className=\"absolute block h-0.5 w-6 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1 bottom-[15px] -rotate-45\"></span>\n                </>\n              ) : (\n                <>\n                  <span className=\"absolute block h-0.5 w-6 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1 top-[7px]\"></span>\n                  <span className=\"absolute top-[15px] block h-0.5 w-4 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1\"></span>\n                  <span className=\"absolute block h-0.5 w-6 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1 bottom-[7px]\"></span>\n                </>\n              )}\n            </button>\n          </div>\n        </nav>\n      </div>\n      <motion.nav\n        className=\"absolute flex flex-col inset-x-0 top-30 z-80 h-screen w-full border-t border-gray-4 lg:flex lg:flex-col [@media(max-width:1182px)]:flex [@media(max-width:1182px)]:flex-col overflow-hidden bg-white\"\n        initial=\"hidden\"\n        animate={showMobileMenu ? \"visible\" : \"hidden\"}\n        variants={{\n          hidden: { x: \"100%\", display: \"none\" },\n          visible: { x: 0, display: \"block\" },\n        }}\n        transition={{ type: \"slide\" }}\n      >\n        <ul className=\"flex-grow items-start divide-y divide-gray-5 overflow-y-auto overflow-x-hidden text-center\">\n          <li className=\"w-full\">\n            <a\n              className=\"group transition-colors duration-200 block py-6 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n              href=\"#product\"\n            >\n              Product\n            </a>\n          </li>\n          <li className=\"w-full\">\n            <button\n              type=\"button\"\n              className=\"group flex cursor-pointer items-center justify-between py-6 leading-none transition-colors duration-200 hover:text-gray-1 text-lg font-normal w-11/12 m-auto\"\n              onClick={toggleMenuCollapse}\n            >\n              <span\n                className={`leading-none ${\n                  showMenuCollapse ? \"font-semibold\" : \"\"\n                }`}\n              >\n                Solutions\n              </span>\n              <i\n                className={`fa-solid ${\n                  showMenuCollapse ? \"fa-chevron-up\" : \"fa-chevron-down\"\n                }`}\n              ></i>\n            </button>\n            <motion.ul\n              className=\"w-full text-left flex flex-col items-start overflow-y-auto overflow-x-hidden\"\n              initial=\"hidden\"\n              animate={showMenuCollapse ? \"visible\" : \"hidden\"}\n              variants={{\n                hidden: {\n                  display: \"none\",\n                  visibility: \"hidden\",\n                  transition: {\n                    staggerChildren: 0.17,\n                    delayChildren: 0.2,\n                  },\n                },\n                visible: {\n                  display: \"block\",\n                  visibility: \"visible\",\n                  transition: {\n                    staggerChildren: 0.17,\n                    delayChildren: 0.2,\n                  },\n                },\n              }}\n              transition={{ type: \"slide\" }}\n            >\n              {showMenuCollapse && (\n                <>\n                  <li className=\"w-full border-b border-gray-5\">\n                    <a\n                      href=\"#data-extraction\"\n                      className=\"group transition-colors duration-200 block py-4 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n                    >\n                      Data Extraction\n                    </a>\n                  </li>\n                  <li className=\"w-full border-b border-gray-5\">\n                    <a\n                      href=\"#data-matching\"\n                      className=\"group transition-colors duration-200 block py-4 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n                    >\n                      Data Matching\n                    </a>\n                  </li>\n                  <li className=\"w-full border-b border-gray-5\">\n                    <a\n                      href=\"#document-authenticity-checks\"\n                      className=\"group transition-colors duration-200 block py-4 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n                    >\n                      Document Authenticity Checks\n                    </a>\n                  </li>\n                  <li className=\"w-full border-b border-gray-5\">\n                    <a\n                      href=\"#liveness-detection\"\n                      className=\"group transition-colors duration-200 block py-4 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n                    >\n                      Liveness Detection\n                    </a>\n                  </li>\n                </>\n              )}\n            </motion.ul>\n          </li>\n          <li className=\"w-full\">\n            <a\n              className=\"group transition-colors duration-200 block py-6 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n              href=\"#product\"\n            >\n              About us\n            </a>\n          </li>\n        </ul>\n        <div className=\"flex items-center xl:pl-4 md:px-4 xs:flex-col xs:gap-y-4 z-50 mt-auto px-6 py-4 shadow-inner bottom-0 w-full bg-white\">\n          <a\n            className=\"group transition-colors duration-200 mr-6 inline-flex items-center justify-center gap-x-2 font-medium hover:text-blue xl:rounded-sm xl:hover:border-blue xs:mr-4 xs:w-full flex-1 rounded-none border-none\"\n            href=\"#github\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <i className=\"fa-brands fa-github fa-lg\"></i>\n            <span className=\"inline\">GitHub</span>\n            <span className=\"sr-only\">GitHub</span>\n          </a>\n          <a\n            className=\"group transition-colors duration-200 inline-flex items-center justify-center font-medium leading-none text-center whitespace-nowrap  disabled:bg-gray-3 disabled:text-white disabled:pointer-events-none sm:w-full text-base px-4.5 py-[11px] rounded-sm text-black border border-black hover:border-blue hover:text-blue mr-4 !px-[17px] !text-15 xs:mr-0 flex-1\"\n            href=\"#sign-in\"\n          >\n            Sign In\n          </a>\n        </div>\n      </motion.nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"w-full bg-[#05172B] text-white\">\n      <div className=\"w-4/5 m-auto py-8\">\n        <div className=\"w-full grid grid-cols-4 gap-4 max-[640px]:grid-cols-2\">\n          <div className=\"max-[640px]:mb-4\">\n            <h1 className=\"logo pb-1\">DigiFact</h1>\n            <ul className=\"flex gap-4\">\n              <li>\n                <i className=\"fa-solid fa-envelope\"></i>\n              </li>\n              <li>\n                <i className=\"fa-brands fa-github\"></i>\n              </li>\n              <li>\n                <i className=\"fa-brands fa-x-twitter\"></i>\n              </li>\n              <li>\n                <i className=\"fa-brands fa-linkedin\"></i>\n              </li>\n            </ul>\n          </div>\n          <div className=\"max-[640px]:mb-4\">\n            <h2 className=\"text-[#fff]/[0.6] pb-1\">Solutions</h2>\n            <ul className=\"space-y-2\">\n              <li>\n                <a href=\"#data-extraction\" className=\"font-normal text-base\">\n                  Data Extraction\n                </a>\n              </li>\n              <li>\n                <a href=\"#data-matching\" className=\"font-normal text-base\">\n                  Data Matching\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"#document-authenticity-checks\"\n                  className=\"font-normal text-base\"\n                >\n                  Document Authenticity Checks\n                </a>\n              </li>\n              <li>\n                <a href=\"#liveness-detection\" className=\"font-normal text-base\">\n                  Liveness Detection\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"\">\n            <h2 className=\"text-[#fff]/[0.6] pb-1\">Resources</h2>\n            <ul className=\"space-y-2\">\n              <li>\n                <a href=\"#blog\" className=\"font-normal text-base\">\n                  Blog\n                </a>\n              </li>\n              <li>\n                <a href=\"#events\" className=\"font-normal text-base\">\n                  Events\n                </a>\n              </li>\n              <li>\n                <a href=\"#labs\" className=\"font-normal text-base\">\n                  Labs\n                </a>\n              </li>\n              <li>\n                <a href=\"#faq\" className=\"font-normal text-base\">\n                  FAQ\n                </a>\n              </li>\n              <li>\n                <a href=\"#whats-new\" className=\"font-normal text-base\">\n                  What's new\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"\">\n            <h2 className=\"text-[#fff]/[0.6] pb-1\">Company</h2>\n            <ul className=\"space-y-2\">\n              <li>\n                <a href=\"#product\" className=\"font-normal text-base\">\n                  Product\n                </a>\n              </li>\n              <li>\n                <a href=\"#about\" className=\"font-normal text-base\">\n                  About DigiFact\n                </a>\n              </li>\n              <li>\n                <a href=\"#careers\" className=\"font-normal text-base\">\n                  <span className=\"careers-shining-animation\">Careers</span>\n                  <span className=\"text-xs absolute ml-2 bg-[#fff3cd] text-[#664d03] hiring-ribbon\">\n                    We're hiring\n                  </span>\n                </a>\n              </li>\n              <li>\n                <a href=\"#contact\" className=\"font-normal text-base\">\n                  Contact us\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <hr className=\"border-t-2 border-gray-800 my-6 mt-10\" />\n        <div className=\"flex w-full gap-4 justify-between max-[640px]:flex-col max-[640px]:text-center\">\n          <span className=\"font-normal text-sm text-[#B6B0B0]\">\n            ©&nbsp;2024 DigiFact. All Rights Reserved. Made with&nbsp;\n            <i className=\"fa-solid fa-heart text-[#ff0000]\"></i>\n            &nbsp;from India.\n          </span>\n          <a\n            href=\"#privacy-policy\"\n            className=\"font-normal text-sm text-[#B6B0B0] mr-6 hover:underline\"\n          >\n            Privacy Policy\n          </a>\n          <a\n            href=\"#open-source-license\"\n            className=\"font-normal text-sm text-[#B6B0B0] mr-6 hover:underline\"\n          >\n            Open Source License\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n","import * as React from \"react\";\nimport Header from \"./header/header\";\nimport Footer from \"./footer/footer\";\nimport Seo from \"../components/seo\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Seo title=\"Home\" />\n      <Header />\n      {children}\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","clear","forEach","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","i","length","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","visualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","undefined","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","animationType","createProjectionNode","useInsertionEffect","wantsHandoff","HandoffComplete","updateFeatures","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","willChange","applyWillChange","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","push","removeItem","index","splice","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","addWillChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","noop","any","cancelFrame","requestAnimationFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","isNullish","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","static","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","Header","showMobileMenu","setShowMobileMenu","useState","showMenuCollapse","setShowMenuCollapse","showSolutionsCollapse","setShowSolutionsCollapse","React","className","href","onClick","toggleSolutionsCollapse","onMouseOver","onMouseLeave","role","rel","toggleMenu","nav","hidden","visible","toggleMenuCollapse","ul","Footer","_ref","_site$siteMetadata","_site$siteMetadata2","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","content","property","author","Seo"],"sourceRoot":""}