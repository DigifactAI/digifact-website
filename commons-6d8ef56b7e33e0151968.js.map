{"version":3,"file":"commons-6d8ef56b7e33e0151968.js","mappings":"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","sources":["webpack://digifact-website/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://digifact-website/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://digifact-website/./src/components/header/header.js","webpack://digifact-website/./src/components/footer/footer.js","webpack://digifact-website/./src/components/seo.js","webpack://digifact-website/./src/components/layout.js"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.17\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n            this.removeWillChange = addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        var _a;\n        (_a = this.removeWillChange) === null || _a === void 0 ? void 0 : _a.call(this);\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false, addValueToWillChange(this.visualElement, axis)));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction isOptimisedAppearTree(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return false;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement) {\n        return false;\n    }\n    else if (getOptimisedAppearId(visualElement)) {\n        return true;\n    }\n    else if (projectionNode.parent &&\n        !projectionNode.parent.hasCheckedOptimisedAppear) {\n        return isOptimisedAppearTree(projectionNode.parent);\n    }\n    else {\n        return false;\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.HandoffCancelAllAnimations &&\n                isOptimisedAppearTree(this)) {\n                window.HandoffCancelAllAnimations();\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.17\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.17 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React, { useState } from \"react\";\nimport { useLocation } from \"@reach/router\";\nimport { motion } from \"framer-motion\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nconst Header = () => {\n  const location = useLocation();\n  const [showMobileMenu, setShowMobileMenu] = useState(false);\n  const [showMenuCollapse, setShowMenuCollapse] = useState(false);\n  const [showSolutionsCollapse, setShowSolutionsCollapse] = useState(false);\n  const isHomePage = location.pathname === \"/\";\n\n  const toggleMenu = () => {\n    setShowMobileMenu(!showMobileMenu);\n  };\n\n  const toggleMenuCollapse = () => {\n    setShowMenuCollapse(!showMenuCollapse);\n  };\n\n  const toggleSolutionsCollapse = () => {\n    setShowSolutionsCollapse(!showSolutionsCollapse);\n  };\n\n  return (\n    <header className=\"z-20 sticky\">\n      <div className=\"static mx-auto w-11/12\">\n        <nav className=\"flex h-16 items-center justify-between\">\n          <div className=\"flex items-center gap-x-[22px] xl:gap-x-8\">\n            <a\n              aria-current=\"page\"\n              className=\"group transition-colors duration-200\"\n              href=\"/\"\n            >\n              <span className=\"sr-only\">DigiFact Logo</span>\n              <div className=\"logo\">DigiFact</div>\n            </a>\n            <ul className=\"flex [@media(max-width:1182px)]:hidden ml-4\">\n              <li>\n                <a\n                  href=\"#product\"\n                  className=\"flex items-center px-3.5 py-5 text-10 transition-colors duration-200 hover:text-blue xl:px-2.5 text-lg font-normal\"\n                >\n                  <span>Product</span>\n                </a>\n              </li>\n              <li>\n                <button\n                  className=\"flex items-center px-3.5 py-5 text-15 transition-colors duration-200 hover:text-blue xl:px-2.5 text-lg font-normal\"\n                  onClick={toggleSolutionsCollapse}\n                  onMouseOver={() => {\n                    setShowSolutionsCollapse(true);\n                  }}\n                  onFocus={() => {\n                    setShowSolutionsCollapse(true);\n                  }}\n                  onMouseLeave={() => {\n                    setShowSolutionsCollapse(false);\n                  }}\n                >\n                  <span>Solutions</span>\n                  <i className=\"fa-solid fa-chevron-down fa-xs pl-1\"></i>\n                </button>\n                {showSolutionsCollapse && (\n                  <div\n                    className=\"absolute bottom-0 left-1/2 w-full -translate-x-1/2 translate-y-full border-t border-gray-4 bg-white shadow-dropdown\"\n                    onMouseOver={() => {\n                      setShowSolutionsCollapse(true);\n                    }}\n                    onFocus={() => {\n                      setShowSolutionsCollapse(true);\n                    }}\n                    onMouseLeave={() => {\n                      setShowSolutionsCollapse(false);\n                    }}\n                    role=\"button\"\n                    tabIndex={0}\n                  >\n                    <div className=\"w-8/12 m-auto py-3\">\n                      <ul className=\"flex w-full flex-wrap justify-left gap-x-16 gap-y-10 md:gap-x-10 md:gap-y-7\">\n                        <li>Data Extraction</li>\n                        <li>Data Matching</li>\n                        <li>Document Authenticity Checks</li>\n                        <li>Liveness Detection</li>\n                      </ul>\n                    </div>\n                  </div>\n                )}\n              </li>\n              <li>\n                <a\n                  href=\"/blog\"\n                  className=\"flex items-center px-3.5 py-5 text-10 transition-colors duration-200 hover:text-blue xl:px-2.5 text-lg font-normal\"\n                >\n                  <span>Blog</span>\n                </a>\n              </li>\n              <li>\n                <a\n                  href={isHomePage ? \"#about\" : \"/#about\"}\n                  className=\"flex items-center px-3.5 py-5 text-10 transition-colors duration-200 hover:text-blue xl:px-2.5 text-lg font-normal\"\n                >\n                  <span>About us</span>\n                </a>\n              </li>\n              <li>\n                <a\n                  href={isHomePage ? \"#contact\" : \"/#contact\"}\n                  className=\"flex items-center px-3.5 py-5 text-10 transition-colors duration-200 hover:text-blue xl:px-2.5 text-lg font-normal\"\n                >\n                  <span>Contact</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center xl:pl-4 md:px-4 xs:flex-col xs:gap-y-4  [@media(max-width:1182px)]:hidden\">\n              <a\n                className=\"group transition-colors duration-200 mr-6 inline-flex items-center justify-center gap-x-2 font-medium hover:text-blue xl:rounded-sm xl:hover:border-blue xs:mr-4 xs:w-full\"\n                href=\"#github\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <i className=\"fa-brands fa-github fa-lg\"></i>\n                <span className=\"hidden\">GitHub</span>\n                <span className=\"sr-only\">GitHub</span>\n              </a>\n              <a\n                className=\"group transition-colors duration-200 inline-flex items-center justify-center font-medium leading-none text-center whitespace-nowrap disabled:bg-gray-3 disabled:text-white disabled:pointer-events-none sm:w-full text-base px-4.5 py-[11px] rounded-sm text-black border border-black mr-4 !px-[17px] !text-15 xs:mr-0 hover:border-blue-600 hover:text-blue-600\"\n                href=\"#sign-in\"\n              >\n                Sign In\n              </a>\n            </div>\n            <button\n              className=\"group relative h-8 w-6 print:!hidden hidden [@media(max-width:1182px)]:block\"\n              type=\"button\"\n              aria-label=\"Open menu\"\n              id=\"toggle-nav\"\n              onClick={toggleMenu}\n            >\n              {showMobileMenu ? (\n                <>\n                  <span className=\"absolute block h-0.5 w-6 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1 top-[15px] rotate-45\"></span>\n                  <span className=\"absolute top-[15px] block h-0.5 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1 invisible w-0 opacity-0\"></span>\n                  <span className=\"absolute block h-0.5 w-6 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1 bottom-[15px] -rotate-45\"></span>\n                </>\n              ) : (\n                <>\n                  <span className=\"absolute block h-0.5 w-6 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1 top-[7px]\"></span>\n                  <span className=\"absolute top-[15px] block h-0.5 w-4 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1\"></span>\n                  <span className=\"absolute block h-0.5 w-6 rounded-sm bg-black transition-all duration-300 ease-in-out group-hover:bg-gray-1 bottom-[7px]\"></span>\n                </>\n              )}\n            </button>\n          </div>\n        </nav>\n      </div>\n      <motion.nav\n        className=\"absolute flex flex-col inset-x-0 top-30 z-80 h-screen w-full border-t border-gray-4 lg:flex lg:flex-col [@media(max-width:1182px)]:flex [@media(max-width:1182px)]:flex-col overflow-hidden bg-white\"\n        initial=\"hidden\"\n        animate={showMobileMenu ? \"visible\" : \"hidden\"}\n        variants={{\n          hidden: { x: \"100%\", display: \"none\" },\n          visible: { x: 0, display: \"block\" },\n        }}\n        transition={{ type: \"slide\" }}\n      >\n        <ul className=\"flex-grow items-start divide-y divide-gray-5 overflow-y-auto overflow-x-hidden text-center\">\n          <li className=\"w-full\">\n            <a\n              className=\"group transition-colors duration-200 block py-6 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n              href=\"#product\"\n            >\n              Product\n            </a>\n          </li>\n          <li className=\"w-full\">\n            <button\n              type=\"button\"\n              className=\"group flex cursor-pointer items-center justify-between py-6 leading-none transition-colors duration-200 hover:text-gray-1 text-lg font-normal w-11/12 m-auto\"\n              onClick={toggleMenuCollapse}\n            >\n              <span\n                className={`leading-none ${\n                  showMenuCollapse ? \"font-semibold\" : \"\"\n                }`}\n              >\n                Solutions\n              </span>\n              <i\n                className={`fa-solid ${\n                  showMenuCollapse ? \"fa-chevron-up\" : \"fa-chevron-down\"\n                }`}\n              ></i>\n            </button>\n            <motion.ul\n              className=\"w-full text-left flex flex-col items-start overflow-y-auto overflow-x-hidden\"\n              initial=\"hidden\"\n              animate={showMenuCollapse ? \"visible\" : \"hidden\"}\n              variants={{\n                hidden: {\n                  display: \"none\",\n                  visibility: \"hidden\",\n                  transition: {\n                    staggerChildren: 0.17,\n                    delayChildren: 0.2,\n                  },\n                },\n                visible: {\n                  display: \"block\",\n                  visibility: \"visible\",\n                  transition: {\n                    staggerChildren: 0.17,\n                    delayChildren: 0.2,\n                  },\n                },\n              }}\n              transition={{ type: \"slide\" }}\n            >\n              {showMenuCollapse && (\n                <>\n                  <li className=\"w-full border-b border-gray-5\">\n                    <a\n                      href=\"#data-extraction\"\n                      className=\"group transition-colors duration-200 block py-4 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n                    >\n                      Data Extraction\n                    </a>\n                  </li>\n                  <li className=\"w-full border-b border-gray-5\">\n                    <a\n                      href=\"#data-matching\"\n                      className=\"group transition-colors duration-200 block py-4 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n                    >\n                      Data Matching\n                    </a>\n                  </li>\n                  <li className=\"w-full border-b border-gray-5\">\n                    <a\n                      href=\"#document-authenticity-checks\"\n                      className=\"group transition-colors duration-200 block py-4 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n                    >\n                      Document Authenticity Checks\n                    </a>\n                  </li>\n                  <li className=\"w-full border-b border-gray-5\">\n                    <a\n                      href=\"#liveness-detection\"\n                      className=\"group transition-colors duration-200 block py-4 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n                    >\n                      Liveness Detection\n                    </a>\n                  </li>\n                </>\n              )}\n            </motion.ul>\n          </li>\n          <li className=\"w-full\">\n            <a\n              className=\"group transition-colors duration-200 block py-6 text-left leading-none hover:text-blue text-lg font-normal w-11/12 m-auto\"\n              href=\"#product\"\n            >\n              About us\n            </a>\n          </li>\n        </ul>\n        <div className=\"flex items-center xl:pl-4 md:px-4 xs:flex-col xs:gap-y-4 z-50 mt-auto px-6 py-4 shadow-inner bottom-0 w-full bg-white\">\n          <a\n            className=\"group transition-colors duration-200 mr-6 inline-flex items-center justify-center gap-x-2 font-medium hover:text-blue xl:rounded-sm xl:hover:border-blue xs:mr-4 xs:w-full flex-1 rounded-none border-none\"\n            href=\"#github\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            <i className=\"fa-brands fa-github fa-lg\"></i>\n            <span className=\"inline\">GitHub</span>\n            <span className=\"sr-only\">GitHub</span>\n          </a>\n          <a\n            className=\"group transition-colors duration-200 inline-flex items-center justify-center font-medium leading-none text-center whitespace-nowrap  disabled:bg-gray-3 disabled:text-white disabled:pointer-events-none sm:w-full text-base px-4.5 py-[11px] rounded-sm text-black border border-black hover:border-blue hover:text-blue mr-4 !px-[17px] !text-15 xs:mr-0 flex-1\"\n            href=\"#sign-in\"\n          >\n            Sign In\n          </a>\n        </div>\n      </motion.nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"w-full bg-[#05172B] text-white\">\n      <div className=\"w-4/5 m-auto py-8\">\n        <div className=\"w-full grid grid-cols-4 gap-4 max-[640px]:grid-cols-2\">\n          <div className=\"max-[640px]:mb-4\">\n            <h1 className=\"logo pb-1 text-2xl\">DigiFact</h1>\n            <ul className=\"flex gap-4\">\n              <li>\n                <i className=\"fa-solid fa-envelope\"></i>\n              </li>\n              <li>\n                <i className=\"fa-brands fa-github\"></i>\n              </li>\n              <li>\n                <i className=\"fa-brands fa-x-twitter\"></i>\n              </li>\n              <li>\n                <i className=\"fa-brands fa-linkedin\"></i>\n              </li>\n            </ul>\n          </div>\n          <div className=\"max-[640px]:mb-4\">\n            <h2 className=\"text-[#fff]/[0.6] pb-1\">Solutions</h2>\n            <ul className=\"space-y-2\">\n              <li>\n                <a href=\"#data-extraction\" className=\"font-normal text-base\">\n                  Data Extraction\n                </a>\n              </li>\n              <li>\n                <a href=\"#data-matching\" className=\"font-normal text-base\">\n                  Data Matching\n                </a>\n              </li>\n              <li>\n                <a\n                  href=\"#document-authenticity-checks\"\n                  className=\"font-normal text-base\"\n                >\n                  Document Authenticity Checks\n                </a>\n              </li>\n              <li>\n                <a href=\"#liveness-detection\" className=\"font-normal text-base\">\n                  Liveness Detection\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"\">\n            <h2 className=\"text-[#fff]/[0.6] pb-1\">Resources</h2>\n            <ul className=\"space-y-2\">\n              <li>\n                <a href=\"#blog\" className=\"font-normal text-base\">\n                  Blog\n                </a>\n              </li>\n              <li>\n                <a href=\"#events\" className=\"font-normal text-base\">\n                  Events\n                </a>\n              </li>\n              <li>\n                <a href=\"#labs\" className=\"font-normal text-base\">\n                  Labs\n                </a>\n              </li>\n              <li>\n                <a href=\"#faq\" className=\"font-normal text-base\">\n                  FAQ\n                </a>\n              </li>\n              <li>\n                <a href=\"#whats-new\" className=\"font-normal text-base\">\n                  What's new\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className=\"\">\n            <h2 className=\"text-[#fff]/[0.6] pb-1\">Company</h2>\n            <ul className=\"space-y-2\">\n              <li>\n                <a href=\"#product\" className=\"font-normal text-base\">\n                  Product\n                </a>\n              </li>\n              <li>\n                <a href=\"#about\" className=\"font-normal text-base\">\n                  About DigiFact\n                </a>\n              </li>\n              <li>\n                <a href=\"/careers\" className=\"font-normal text-base\">\n                  <span className=\"careers-shining-animation\">Careers</span>\n                  <span className=\"text-xs absolute ml-2 bg-[#fff3cd] text-[#664d03] hiring-ribbon\">\n                    We're hiring\n                  </span>\n                </a>\n              </li>\n              <li>\n                <a href=\"#contact\" className=\"font-normal text-base\">\n                  Contact us\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <hr className=\"border-t-2 border-gray-800 my-6 mt-10\" />\n        <div className=\"flex w-full gap-4 justify-between max-[640px]:flex-col max-[640px]:text-center\">\n          <span className=\"font-normal text-sm text-[#B6B0B0]\">\n            ©&nbsp;2024 DigiFact. All Rights Reserved. Made with&nbsp;\n            <i className=\"fa-solid fa-heart text-[#ff0000]\"></i>\n            &nbsp;from India.\n          </span>\n          <a\n            href=\"#privacy-policy\"\n            className=\"font-normal text-sm text-[#B6B0B0] mr-6 hover:underline\"\n          >\n            Privacy Policy\n          </a>\n          <a\n            href=\"#open-source-license\"\n            className=\"font-normal text-sm text-[#B6B0B0] mr-6 hover:underline\"\n          >\n            Open Source License\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n","import * as React from \"react\";\nimport Header from \"./header/header\";\nimport Footer from \"./footer/footer\";\nimport Seo from \"../components/seo\";\n\nconst Layout = ({ children }) => {\n  return (\n    <>\n      <Seo title=\"Home\" />\n      <Header />\n      {children}\n      <Footer />\n    </>\n  );\n};\n\nexport default Layout;\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","clear","forEach","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","i","length","microtask","cancelMicrotask","queueMicrotask","isRefObject","ref","Object","prototype","hasOwnProperty","call","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","visualElement","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","latestValues","undefined","getClosestProjectingNode","setOptions","alwaysMeasureLayout","Boolean","animationType","createProjectionNode","useInsertionEffect","wantsHandoff","HandoffComplete","updateFeatures","animationState","animateChanges","completeHandoff","options","allowProjection","useMotionRef","externalRef","useCallback","instance","mount","unmount","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","LayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","MeasureLayout","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","value","children","jsx","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","transformString","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","Fragment","renderedChildren","createElement","renderHTML","element","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","getValue","liveStyle","willChange","applyWillChange","charAt","toUpperCase","substring","getValueState","resolveVariantFromProps","definition","velocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","push","removeItem","index","splice","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","addWillChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","noop","any","cancelFrame","requestAnimationFrame","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerEvent","addPointerInfo","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","sqrt","getValueTransition","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","clearTime","time","newTime","isZeroValueString","warning","invariant","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isColorString","testProp","isNullish","splitColor","aName","bName","cName","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","owner","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","updateFinishedPromise","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","pow","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","easing","reverseEasing","circIn","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","KeyframeResolver$1","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","teardown","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","supportsWaapi","Element","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","catch","getAll","propName","setAll","newValue","cancelAll","prevProgress","onFrame","observeTimeline","cancelTimeline","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","getOptimisedAppearId","WillChangeMotionValue","counts","styleName","prevCount","hasRemoved","newCount","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","HandoffAppearAnimations","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","checkVariantsDidChange","createTypeState","prevResolvedValues","createState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","reset","createAnimationState","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","removeWillChange","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","isOptimisedAppearTree","projectionNode","hasCheckedOptimisedAppear","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","HandoffCancelAllAnimations","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","isRenderScheduled","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","Header","location","useLocation","showMobileMenu","setShowMobileMenu","useState","showMenuCollapse","setShowMenuCollapse","showSolutionsCollapse","setShowSolutionsCollapse","isHomePage","pathname","React","className","href","onClick","toggleSolutionsCollapse","onMouseOver","onMouseLeave","role","rel","toggleMenu","nav","hidden","visible","toggleMenuCollapse","ul","Footer","_ref","_site$siteMetadata","_site$siteMetadata2","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","content","property","author","Seo"],"sourceRoot":""}